name: Build and Analyze

on:
  push:
    branches:
      - master
      - dev

jobs:
  build:
    name: Build and Analyze
    runs-on: windows-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'  # Zmień na wersję .NET, której używasz
      
      - name: Setup Node.js for React app
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'  # Zmień na wersję Node.js, której używasz

      # Cache dla SonarQube i inne konfiguracje

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and analyze .NET project
        shell: powershell
        run: |
          cd webapi
          dotnet sonarscanner begin /k:"Sendej7_CharSheetForge_AYqKyYSB222sTEAu7r1E" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          dotnet build
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build and analyze React app
        shell: powershell
        run: |
          cd reactapp
          npm install
          npm run build  # lub inny skrypt do budowania Twojej aplikacji React
          sonar-scanner -Dsonar.projectKey="Sendej7_CharSheetForge_AYqKyYSB222sTEAu7r1E" -Dsonar.sources=src -Dsonar.host.url="${{ secrets.SONAR_HOST_URL }}" -Dsonar.login="${{ secrets.SONAR_TOKEN }}"
